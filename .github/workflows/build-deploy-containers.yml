name: container builds

concurrency:
  group: buildDeployContainers
  cancel-in-progress: true

on:
  push:
    branches:
      - "ci/enabling_multi_arch_containers"
  # release:
  #   types: [published]
  workflow_dispatch:

# Repository specific variables
env:
  ecr_repository: kidsloop-hub-frontend
  argocd_app_chart_tag_path: hubFrontend.tag
  argocd_app_component: hub-frontend

jobs:
  install:
    uses: KL-Engineering/github-action-workflows/.github/workflows/npm-ci.yml@v1.1.5
    secrets:
      NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

  build-container:
    needs: [install]
    outputs:
      image_version: ${{ steps.build-push.outputs.image_version}}
    strategy:
      matrix:
        include:
          - environment: landingzone
            region: uk
          # - environment: prod
          #   region: uk
          # - environment: beta
          #   region: id
          # - environment: prod
          #   region: id
          # - environment: prod
          #   region: th
          # - environment: beta
          #   region: vn
          # - environment: prod
          #   region: vn
          # - environment: prod
          #   region: in
          # - environment: prod
          #   region: lk
          # - environment: uat
          #   region: mb
          # - environment: prod
          #   region: pk
          # - environment: prod
          #   region: global
          # - environment: alpha
          #   region: global
          # - environment: loadtest
          #   region: global
          # - environment: nextgen
          #   region: global
          # - environment: showroom
          #   region: global
          # - environment: stage
          #   region: global
    name: build container
    runs-on: ubuntu-latest
    env:
      region: ${{ matrix.region }}
      environment: ${{ matrix.environment }}
    steps:
      - uses: KL-Engineering/github-action-workflows/.github/actions/npm-build-fe@v3.2.0
        with:
          environment: ${{ env.environment }}
          region: ${{ env.region }}
      - name: Add compiled files to the container deploy directory
        run: cp -r dist deploy/

      - name: Build and Push Container
        id: build-push
        uses: KL-Engineering/github-action-workflows/.github/actions/docker-build-push@v3.2.0
        with:
          image_name: ${{ env.ecr_repository }}
          dockerfile: deploy/Dockerfile
          docker_build_context: deploy
          platforms: linux/amd64,linux/arm64
          tags: |
            type=ref,event=tag,suffix=-${{ env.region }}-${{ env.environment }}
            type=ref,event=tag,suffix=-${{ env.region }}-${{ env.environment }}-{{sha}}
            type=ref,event=tag,suffix=-${{ env.region }}-${{ env.environment }}-latest
            type=ref,event=branch,suffix=-${{ env.region }}-${{ env.environment }}-{{sha}}
            type=ref,event=branch,suffix=-${{ env.region }}-${{ env.environment }}-latest
          ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}

      - name: Archive build for legacy frontend deployments
        shell: bash
        run: |
          tar zcvf dist.tgz dist

      - name: Upload build to github artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ steps.build-push.outputs.image_version}}
          path: dist.tgz
          retention-days: 1
          if-no-files-found: error

  deploy-ci:
    needs: [build-container]
    strategy:
      matrix:
        include:
          - environment: landingzone
            url: https://hub.landing-zone.kidsloop.live
            region: uk
    environment:
      url: ${{ matrix.url }}
      name: ${{ matrix.environment }}
    name: deploy
    runs-on: ubuntu-latest
    env:
      region: ${{ matrix.region }}
      environment: ${{ matrix.environment }}
    steps:
      - name: Deploy to ${{ matrix.environment }}
        uses: KL-Engineering/github-action-workflows/.github/actions/argocd-override-image-parameter@v3.2.0
        with:
          environment: ${{ env.environment }}
          region: ${{ env.region }}
          argocd_app: "${{ env.region }}-${{ env.environment }}-${{ env.argocd_app_component }}"
          argocd_app_chart_tag_path: ${{ env.argocd_app_chart_tag_path }}
          argocd_app_chart_tag_value: ${{ needs.build-container.outputs.image_version }}
          TOOLS_KUBECONFIG_CONTENT_B64: ${{ secrets.TOOLS_KUBECONFIG_CONTENT_B64 }}
          ARGOCD_AUTH_USERNAME: ${{ secrets.ARGOCD_AUTH_USERNAME }}
          ARGOCD_AUTH_PASSWORD: ${{ secrets.ARGOCD_AUTH_PASSWORD }}
